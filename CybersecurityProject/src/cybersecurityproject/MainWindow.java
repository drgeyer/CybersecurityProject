/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cybersecurityproject;

import java.awt.BorderLayout;
import java.io.File;
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author 7051665
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InitialPanel = new javax.swing.JPanel();
        NewButton = new javax.swing.JButton();
        AttemptButton = new javax.swing.JButton();
        ViewButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        NewPassword = new javax.swing.JMenuItem();
        AttemptPassword = new javax.swing.JMenuItem();
        SavePassword = new javax.swing.JMenuItem();
        ViewPassword = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        ExitMenuItem = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();
        HelpMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InitialPanel.setMinimumSize(new java.awt.Dimension(477, 200));
        InitialPanel.setPreferredSize(new java.awt.Dimension(702, 200));
        InitialPanel.setLayout(new java.awt.GridLayout(1, 0));

        NewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cybersecurityproject/NewPasswordIcon.png"))); // NOI18N
        NewButton.setMaximumSize(new java.awt.Dimension(147, 200));
        NewButton.setMinimumSize(new java.awt.Dimension(147, 200));
        NewButton.setPreferredSize(new java.awt.Dimension(147, 200));
        NewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewButtonActionPerformed(evt);
            }
        });
        InitialPanel.add(NewButton);

        AttemptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cybersecurityproject/OpenPasswordIcon.png"))); // NOI18N
        AttemptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttemptButtonActionPerformed(evt);
            }
        });
        InitialPanel.add(AttemptButton);

        ViewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cybersecurityproject/ViewPassword.png"))); // NOI18N
        ViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewButtonActionPerformed(evt);
            }
        });
        InitialPanel.add(ViewButton);

        getContentPane().add(InitialPanel, java.awt.BorderLayout.CENTER);

        FileMenu.setText("File");

        NewPassword.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        NewPassword.setText("New Password");
        NewPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPasswordActionPerformed(evt);
            }
        });
        FileMenu.add(NewPassword);

        AttemptPassword.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        AttemptPassword.setText("Attempt Password");
        AttemptPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttemptPasswordActionPerformed(evt);
            }
        });
        FileMenu.add(AttemptPassword);

        SavePassword.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        SavePassword.setText("Save Password");
        SavePassword.setEnabled(false);
        SavePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavePasswordActionPerformed(evt);
            }
        });
        FileMenu.add(SavePassword);

        ViewPassword.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        ViewPassword.setText("View Password");
        ViewPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewPasswordActionPerformed(evt);
            }
        });
        FileMenu.add(ViewPassword);
        FileMenu.add(jSeparator1);

        ExitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        ExitMenuItem.setText("Exit");
        ExitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(ExitMenuItem);

        jMenuBar1.add(FileMenu);

        EditMenu.setText("Edit");
        jMenuBar1.add(EditMenu);

        HelpMenu.setText("Help");
        jMenuBar1.add(HelpMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NewPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPasswordActionPerformed
        if(ActivePanel != null)
            remove(ActivePanel);
        //Create a NewPassword JPanel
        ActivePanel = new NewPasswordForm();
        //Set it fill up the entire MainWindow
        add(ActivePanel, BorderLayout.CENTER);
        SavePassword.setEnabled(true);
        //Now redraw the UI and displays the ActivePanel
        pack();
        
        //This will select the first text box after opening the NewPasswordForm
        NewPasswordForm temp = (NewPasswordForm)ActivePanel;
        temp.InitialFocus();
        
        
        
    }//GEN-LAST:event_NewPasswordActionPerformed

    private void AttemptPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttemptPasswordActionPerformed
        //Open a file browser dialog so user can select password file
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("Password Files", "pwd"));
        int user_choice = fc.showOpenDialog(this);
        
        //if the user selected a file then open it, otherwise keep the ActivePanel
        if(user_choice == JFileChooser.APPROVE_OPTION)
        {
            //If the file is a valid .pwd file then change the ActivePanel
            if(isValidPwdFile(fc.getSelectedFile()))
            {
                remove(ActivePanel);    //we are finally able to release the old ActivePanel
                ActivePanel = new AttemptPasswordForm(fc.getSelectedFile());
            }
            else
            {
                return;
            }
            //Now add the new ActivePanel to the JFrame
            add(ActivePanel);
            pack();
        }
        //if the user chose cancel then do nothing
        //doing nothign will leave the current ActivePanel up
    }//GEN-LAST:event_AttemptPasswordActionPerformed

    private boolean isValidPwdFile(File infile)
    {
        int n_ints = 0;
        Scanner inScanner;
        try {
            inScanner = new Scanner(infile);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
        int temp;
        while(inScanner.hasNextInt())
        {
            n_ints += 1;
            temp = inScanner.nextInt();
        }
        
        return n_ints % 6 == 0; 
    }
    
    private void SavePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavePasswordActionPerformed

        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("Password Files", "pwd"));
        int user_choice = fc.showSaveDialog(this);
        
        if(user_choice == JFileChooser.APPROVE_OPTION)
        {
            File saveFile = fc.getSelectedFile();
            NewPasswordForm child = (NewPasswordForm)ActivePanel;
            
            for(PasswordEvent ev : child.newPassword.events)
            {
                WritePasswordEvent(saveFile, ev);
            }
            
        }
    }//GEN-LAST:event_SavePasswordActionPerformed

    private void WritePasswordEvent(File saveFile, PasswordEvent ev)
    {
        PrintWriter writer;
        try {
             writer = new PrintWriter(saveFile.getName());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        writer.println(ev.KeyLocation);
        writer.println(ev.KeyPressed);
        writer.println(ev.KeyCode);
        writer.println(ev.KeyLocation);
        writer.println(ev.TimeSincePrev);
        writer.println(ev.TimeToNext);
        writer.println(ev.TimeSinceFirst);
        
        
    }
    
    public void FireSavePasswordAction()
    {
        SavePasswordActionPerformed(null);
    }
    
    private void ViewPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewPasswordActionPerformed
        //Open a file browser dialog so user can select password file
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("Password Files", "pwd"));
        int user_choice = fc.showOpenDialog(this);
        
        //if the user selected a file then open it, otherwise keep the ActivePanel
        if(user_choice == JFileChooser.APPROVE_OPTION)
        {
            //If the file is a valid .pwd file then change the ActivePanel
            if(isValidPwdFile(fc.getSelectedFile()))
            {
                remove(ActivePanel);    //we are finally able to release the old ActivePanel
                ActivePanel = new ViewPasswordForm(fc.getSelectedFile());
            }
            else
            {
                return;
            }
            //Now add the new ActivePanel to the JFrame
            add(ActivePanel);
            pack();
        }
    }//GEN-LAST:event_ViewPasswordActionPerformed

    private void ExitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItemActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_ExitMenuItemActionPerformed

    private void NewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewButtonActionPerformed
        // TODO add your handling code here:
        remove(InitialPanel);
        NewPasswordActionPerformed(null);
    }//GEN-LAST:event_NewButtonActionPerformed

    private void AttemptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttemptButtonActionPerformed
        // TODO add your handling code here:
        ActivePanel = InitialPanel;
        AttemptPasswordActionPerformed(null);
    }//GEN-LAST:event_AttemptButtonActionPerformed

    private void ViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewButtonActionPerformed
        // TODO add your handling code here:
        ActivePanel = InitialPanel;
        ViewPasswordActionPerformed(null);
    }//GEN-LAST:event_ViewButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    //User defined variables
    private javax.swing.JPanel ActivePanel;
    
    //System defined variables
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AttemptButton;
    private javax.swing.JMenuItem AttemptPassword;
    private javax.swing.JMenu EditMenu;
    private javax.swing.JMenuItem ExitMenuItem;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JPanel InitialPanel;
    private javax.swing.JButton NewButton;
    private javax.swing.JMenuItem NewPassword;
    private javax.swing.JMenuItem SavePassword;
    private javax.swing.JButton ViewButton;
    private javax.swing.JMenuItem ViewPassword;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
